1.将对象组合成树形结构以表示"部分-整体"的层次结构,使得用户对单个对象和组合对象的使用具有一致性
2.优点:
 	高层模块调用简单，高层模块不必关系自己处理的是单个对象还是整个组合结构
 	节点自由调整，树枝、叶节点的增加方便，符合开闭原则
    缺点:
  	没有面向接口编程，与依赖倒转原则冲突。
3.使用场景:
	维护和展示部分-整体关系的场景，比如树形菜单、文件和文件夹管理
	从一个整体中能独立出部分模块或功能的场景
4.透明模式/安全模式的组合模式:
	1.代码为安全模式
	2.透明模式:在抽象构件中管理叶子/树枝构件